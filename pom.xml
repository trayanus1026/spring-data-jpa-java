<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.springframework.data</groupId>
	<artifactId>spring-data-jpa-parent</artifactId>
	<version>3.2.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Spring Data JPA Parent</name>
	<description>Parent module for Spring Data JPA repositories.</description>
	<url>https://spring.io/projects/spring-data-jpa</url>
	<scm>
		<connection>scm:git:git://github.com:spring-projects/spring-data-jpa.git</connection>
		<developerConnection>scm:git:git@github.com:spring-projects/spring-data-jpa.git</developerConnection>
		<url>https://github.com/spring-projects/spring-data-jpa</url>
	</scm>
	<issueManagement>
		<url>https://github.com/spring-projects/spring-data-jpa/issues</url>
	</issueManagement>

	<parent>
		<groupId>org.springframework.data.build</groupId>
		<artifactId>spring-data-parent</artifactId>
		<version>3.2.0-SNAPSHOT</version>
	</parent>

	<properties>
		<antlr>4.10.1</antlr> <!-- align with Hibernate's parser -->
		<eclipselink>3.0.3</eclipselink>
		<hibernate>6.2.4.Final</hibernate>
		<hsqldb>2.7.1</hsqldb>
		<h2>2.2.220</h2>
		<jsqlparser>4.5</jsqlparser>
		<mysql-connector-java>8.0.33</mysql-connector-java>
		<postgresql>42.6.0</postgresql>
		<springdata.commons>3.2.0-SNAPSHOT</springdata.commons>
		<vavr>0.10.3</vavr>

		<hibernate.groupId>org.hibernate</hibernate.groupId>

		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>

		<!-- Antora -->
		<node.version>v18.12.1</node.version>
		<npm.version>8.19.2</npm.version>
		<antora.version>3.2.0-alpha.2</antora.version>
		<antora-atlas.version>1.0.0-alpha.1</antora-atlas.version>
		<antora-collector.version>1.0.0-alpha.3</antora-collector.version>
		<asciidoctor-tabs.version>1.0.0-beta.3</asciidoctor-tabs.version>
		<spring-antora-extensions.version>1.4.0</spring-antora-extensions.version>
		<spring-asciidoctor-extensions.version>1.0.0-alpha.9</spring-asciidoctor-extensions.version>

	</properties>

	<modules>
		<module>spring-data-envers</module>
		<module>spring-data-jpa</module>
		<module>spring-data-jpa-distribution</module>
	</modules>


	<profiles>
		<profile>
			<id>hibernate-61</id>
			<properties>
				<hibernate>6.1.7.Final</hibernate>
			</properties>
		</profile>
		<profile>
			<id>all-dbs</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<id>mysql-test</id>
								<phase>test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<includes>
										<include>**/MySql*IntegrationTests.java</include>
									</includes>
								</configuration>
							</execution>
							<execution>
								<id>postgres-test</id>
								<phase>test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<includes>
										<include>**/Postgres*IntegrationTests.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>eclipselink-next</id>
			<properties>
				<eclipselink>4.0.0</eclipselink>
			</properties>
		</profile>
		<profile>
			<id>docs</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.12.1</version>
						<executions>
							<execution>
								<id>install-antora</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>initialize</phase>
								<configuration>
									<nodeVersion>${node.version}</nodeVersion>
									<npmVersion>${npm.version}</npmVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm install antora</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>initialize</phase>
								<configuration>
									<arguments>install @antora/cli@${antora.version} @antora/site-generator-default@${antora.version} @antora/atlas-extension@${antora-atlas.version} @antora/collector-extension@${antora-collector.version} @asciidoctor/tabs@${asciidoctor-tabs.version} @springio/antora-extensions@${spring-antora-extensions.version} @springio/asciidoctor-extensions@${spring-asciidoctor-extensions.version}</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>antora</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>compile</phase>
								<configuration>
									<!-- If we don't want to depend on default node installation path we can use a maven
                                     property aligned with frontend-maven-plugin's installDirectory configuration -->
									<executable>node/node</executable>
									<arguments>
										<argument>node_modules/.bin/antora</argument>
										<argument>src/main/antora/antora-playbook.yml</argument>
										<argument>--to-dir=target/site</argument>
									</arguments>
									<workingDirectory>${project.parent.basedir}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<version>3.1.0</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>node</directory>
									<followSymlinks>false</followSymlinks>
								</fileset>
								<fileset>
									<directory>node_modules</directory>
									<followSymlinks>false</followSymlinks>
								</fileset>
								<fileset>
									<directory>build</directory>
									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
				</plugins>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
			</build>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-instrument</artifactId>
			<version>${spring}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>spring-instrument</artifactId>
						<version>${spring}</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<!-- override the default-test execution and exclude everything -->
						<id>default-test</id>
						<configuration>
							<excludes>
								<exclude>**/*</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>unit-test</id>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<includes>
								<include>**/*UnitTests.java</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<includes>
								<include>**/*IntegrationTests.java</include>
								<include>**/*Tests.java</include>
							</includes>
							<excludes>
								<exclude>**/*UnitTests.java</exclude>
								<exclude>**/OpenJpa*</exclude>
								<exclude>**/EclipseLink*</exclude>
								<exclude>**/MySql*</exclude>
								<exclude>**/Postgres*</exclude>
							</excludes>
							<argLine>
								-javaagent:${settings.localRepository}/org/springframework/spring-instrument/${spring}/spring-instrument-${spring}.jar
							</argLine>
						</configuration>
					</execution>
					<execution>
						<id>eclipselink-test</id>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<includes>
								<include>**/EclipseLink*Tests.java</include>
							</includes>
							<argLine>
								-javaagent:${settings.localRepository}/org/eclipse/persistence/org.eclipse.persistence.jpa/${eclipselink}/org.eclipse.persistence.jpa-${eclipselink}.jar
								-javaagent:${settings.localRepository}/org/springframework/spring-instrument/${spring}/spring-instrument-${spring}.jar
							</argLine>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-snapshot</id>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>spring-milestone</id>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestone</id>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>

</project>
